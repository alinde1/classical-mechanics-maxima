# this recipe is for Clozure CL; something similar for SBCL should be possible
#
# To clarify what's going on, in Lisp systems it is easy to create an
# image of the Lisp interpreter plus additional code which has been
# loaded into the interpreter. So it's easy to incrementally extend a
# Lisp program -- just load some more code and save the resulting image.
# That's how the maxima-jupyter plugin is created -- Maxima itself is a
# Lisp image, so we load some more functions for the Jupyter stuff,
# and save the image.

shell input --> $ mkdir -p binary/binary-openmcl
shell input --> $ maxima -l ccl
maxima input--> (%i2) :lisp (load "path/to/load-maxima-jupyter.lisp")
FOR CLOZURE CL:
maxima input--> (%i2) :lisp (ccl:save-application "binary/binary-openmcl/maxima-jupyter" :toplevel-function 'maxima-jupyter:kernel-start-exec :prepend-kernel t)
FOR SBCL:
maxima input--> (%i2) :lisp (sb-ext:save-lisp-and-die #P"binary/binary-sbcl/maxima-jupyter-exec" :executable t :toplevel 'maxima-jupyter:kernel-start-exec)
